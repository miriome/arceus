//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Follow = newFollowTable("miromie-local", "follow", "")

type followTable struct {
	mysql.Table

	// Columns
	ID       mysql.ColumnInteger
	UserID   mysql.ColumnInteger
	TargetID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FollowTable struct {
	followTable

	NEW followTable
}

// AS creates new FollowTable with assigned alias
func (a FollowTable) AS(alias string) *FollowTable {
	return newFollowTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FollowTable with assigned schema name
func (a FollowTable) FromSchema(schemaName string) *FollowTable {
	return newFollowTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FollowTable with assigned table prefix
func (a FollowTable) WithPrefix(prefix string) *FollowTable {
	return newFollowTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FollowTable with assigned table suffix
func (a FollowTable) WithSuffix(suffix string) *FollowTable {
	return newFollowTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFollowTable(schemaName, tableName, alias string) *FollowTable {
	return &FollowTable{
		followTable: newFollowTableImpl(schemaName, tableName, alias),
		NEW:         newFollowTableImpl("", "new", ""),
	}
}

func newFollowTableImpl(schemaName, tableName, alias string) followTable {
	var (
		IDColumn       = mysql.IntegerColumn("id")
		UserIDColumn   = mysql.IntegerColumn("user_id")
		TargetIDColumn = mysql.IntegerColumn("target_id")
		allColumns     = mysql.ColumnList{IDColumn, UserIDColumn, TargetIDColumn}
		mutableColumns = mysql.ColumnList{UserIDColumn, TargetIDColumn}
	)

	return followTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:       IDColumn,
		UserID:   UserIDColumn,
		TargetID: TargetIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
