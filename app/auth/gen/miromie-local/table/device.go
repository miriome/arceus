//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Device = newDeviceTable("miromie-local", "device", "")

type deviceTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnInteger
	DevicePushToken mysql.ColumnString
	UID             mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type DeviceTable struct {
	deviceTable

	NEW deviceTable
}

// AS creates new DeviceTable with assigned alias
func (a DeviceTable) AS(alias string) *DeviceTable {
	return newDeviceTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DeviceTable with assigned schema name
func (a DeviceTable) FromSchema(schemaName string) *DeviceTable {
	return newDeviceTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DeviceTable with assigned table prefix
func (a DeviceTable) WithPrefix(prefix string) *DeviceTable {
	return newDeviceTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DeviceTable with assigned table suffix
func (a DeviceTable) WithSuffix(suffix string) *DeviceTable {
	return newDeviceTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDeviceTable(schemaName, tableName, alias string) *DeviceTable {
	return &DeviceTable{
		deviceTable: newDeviceTableImpl(schemaName, tableName, alias),
		NEW:         newDeviceTableImpl("", "new", ""),
	}
}

func newDeviceTableImpl(schemaName, tableName, alias string) deviceTable {
	var (
		IDColumn              = mysql.IntegerColumn("id")
		DevicePushTokenColumn = mysql.StringColumn("device_push_token")
		UIDColumn             = mysql.IntegerColumn("uid")
		allColumns            = mysql.ColumnList{IDColumn, DevicePushTokenColumn, UIDColumn}
		mutableColumns        = mysql.ColumnList{DevicePushTokenColumn, UIDColumn}
	)

	return deviceTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		DevicePushToken: DevicePushTokenColumn,
		UID:             UIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
