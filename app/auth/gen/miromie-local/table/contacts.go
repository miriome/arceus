//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Contacts = newContactsTable("miromie-local", "contacts", "")

type contactsTable struct {
	mysql.Table

	// Columns
	ID            mysql.ColumnInteger
	UserID        mysql.ColumnInteger
	TargetID      mysql.ColumnInteger
	LastMessage   mysql.ColumnString
	LastTimestamp mysql.ColumnInteger
	LastDate      mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ContactsTable struct {
	contactsTable

	NEW contactsTable
}

// AS creates new ContactsTable with assigned alias
func (a ContactsTable) AS(alias string) *ContactsTable {
	return newContactsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ContactsTable with assigned schema name
func (a ContactsTable) FromSchema(schemaName string) *ContactsTable {
	return newContactsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ContactsTable with assigned table prefix
func (a ContactsTable) WithPrefix(prefix string) *ContactsTable {
	return newContactsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ContactsTable with assigned table suffix
func (a ContactsTable) WithSuffix(suffix string) *ContactsTable {
	return newContactsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newContactsTable(schemaName, tableName, alias string) *ContactsTable {
	return &ContactsTable{
		contactsTable: newContactsTableImpl(schemaName, tableName, alias),
		NEW:           newContactsTableImpl("", "new", ""),
	}
}

func newContactsTableImpl(schemaName, tableName, alias string) contactsTable {
	var (
		IDColumn            = mysql.IntegerColumn("id")
		UserIDColumn        = mysql.IntegerColumn("user_id")
		TargetIDColumn      = mysql.IntegerColumn("target_id")
		LastMessageColumn   = mysql.StringColumn("last_message")
		LastTimestampColumn = mysql.IntegerColumn("last_timestamp")
		LastDateColumn      = mysql.TimestampColumn("last_date")
		allColumns          = mysql.ColumnList{IDColumn, UserIDColumn, TargetIDColumn, LastMessageColumn, LastTimestampColumn, LastDateColumn}
		mutableColumns      = mysql.ColumnList{UserIDColumn, TargetIDColumn, LastMessageColumn, LastTimestampColumn, LastDateColumn}
	)

	return contactsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		UserID:        UserIDColumn,
		TargetID:      TargetIDColumn,
		LastMessage:   LastMessageColumn,
		LastTimestamp: LastTimestampColumn,
		LastDate:      LastDateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
