//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Posts = newPostsTable("miromie-local", "posts", "")

type postsTable struct {
	mysql.Table

	// Columns
	ID          mysql.ColumnInteger
	Image       mysql.ColumnString
	Caption     mysql.ColumnString
	ChatEnabled mysql.ColumnBool
	Hashtag     mysql.ColumnString
	Hypertext   mysql.ColumnString
	Hyperlink   mysql.ColumnString
	AddedBy     mysql.ColumnInteger
	Likes       mysql.ColumnInteger
	Deleted     mysql.ColumnBool
	CreatedAt   mysql.ColumnInteger
	UpdatedAt   mysql.ColumnInteger
	DeletedAt   mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type PostsTable struct {
	postsTable

	NEW postsTable
}

// AS creates new PostsTable with assigned alias
func (a PostsTable) AS(alias string) *PostsTable {
	return newPostsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PostsTable with assigned schema name
func (a PostsTable) FromSchema(schemaName string) *PostsTable {
	return newPostsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new PostsTable with assigned table prefix
func (a PostsTable) WithPrefix(prefix string) *PostsTable {
	return newPostsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new PostsTable with assigned table suffix
func (a PostsTable) WithSuffix(suffix string) *PostsTable {
	return newPostsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newPostsTable(schemaName, tableName, alias string) *PostsTable {
	return &PostsTable{
		postsTable: newPostsTableImpl(schemaName, tableName, alias),
		NEW:        newPostsTableImpl("", "new", ""),
	}
}

func newPostsTableImpl(schemaName, tableName, alias string) postsTable {
	var (
		IDColumn          = mysql.IntegerColumn("id")
		ImageColumn       = mysql.StringColumn("image")
		CaptionColumn     = mysql.StringColumn("caption")
		ChatEnabledColumn = mysql.BoolColumn("chat_enabled")
		HashtagColumn     = mysql.StringColumn("hashtag")
		HypertextColumn   = mysql.StringColumn("hypertext")
		HyperlinkColumn   = mysql.StringColumn("hyperlink")
		AddedByColumn     = mysql.IntegerColumn("added_by")
		LikesColumn       = mysql.IntegerColumn("likes")
		DeletedColumn     = mysql.BoolColumn("deleted")
		CreatedAtColumn   = mysql.IntegerColumn("created_at")
		UpdatedAtColumn   = mysql.IntegerColumn("updated_at")
		DeletedAtColumn   = mysql.TimestampColumn("deleted_at")
		allColumns        = mysql.ColumnList{IDColumn, ImageColumn, CaptionColumn, ChatEnabledColumn, HashtagColumn, HypertextColumn, HyperlinkColumn, AddedByColumn, LikesColumn, DeletedColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
		mutableColumns    = mysql.ColumnList{ImageColumn, CaptionColumn, ChatEnabledColumn, HashtagColumn, HypertextColumn, HyperlinkColumn, AddedByColumn, LikesColumn, DeletedColumn, CreatedAtColumn, UpdatedAtColumn, DeletedAtColumn}
	)

	return postsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		Image:       ImageColumn,
		Caption:     CaptionColumn,
		ChatEnabled: ChatEnabledColumn,
		Hashtag:     HashtagColumn,
		Hypertext:   HypertextColumn,
		Hyperlink:   HyperlinkColumn,
		AddedBy:     AddedByColumn,
		Likes:       LikesColumn,
		Deleted:     DeletedColumn,
		CreatedAt:   CreatedAtColumn,
		UpdatedAt:   UpdatedAtColumn,
		DeletedAt:   DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
