//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Contacts = newContactsTable("miromielocal", "contacts", "")

type contactsTable struct {
	postgres.Table

	// Columns
	ID            postgres.ColumnInteger
	UserID        postgres.ColumnInteger
	TargetID      postgres.ColumnInteger
	LastMessage   postgres.ColumnString
	LastTimestamp postgres.ColumnInteger
	LastDate      postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ContactsTable struct {
	contactsTable

	EXCLUDED contactsTable
}

// AS creates new ContactsTable with assigned alias
func (a ContactsTable) AS(alias string) *ContactsTable {
	return newContactsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ContactsTable with assigned schema name
func (a ContactsTable) FromSchema(schemaName string) *ContactsTable {
	return newContactsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ContactsTable with assigned table prefix
func (a ContactsTable) WithPrefix(prefix string) *ContactsTable {
	return newContactsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ContactsTable with assigned table suffix
func (a ContactsTable) WithSuffix(suffix string) *ContactsTable {
	return newContactsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newContactsTable(schemaName, tableName, alias string) *ContactsTable {
	return &ContactsTable{
		contactsTable: newContactsTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newContactsTableImpl("", "excluded", ""),
	}
}

func newContactsTableImpl(schemaName, tableName, alias string) contactsTable {
	var (
		IDColumn            = postgres.IntegerColumn("id")
		UserIDColumn        = postgres.IntegerColumn("user_id")
		TargetIDColumn      = postgres.IntegerColumn("target_id")
		LastMessageColumn   = postgres.StringColumn("last_message")
		LastTimestampColumn = postgres.IntegerColumn("last_timestamp")
		LastDateColumn      = postgres.TimestampzColumn("last_date")
		allColumns          = postgres.ColumnList{IDColumn, UserIDColumn, TargetIDColumn, LastMessageColumn, LastTimestampColumn, LastDateColumn}
		mutableColumns      = postgres.ColumnList{UserIDColumn, TargetIDColumn, LastMessageColumn, LastTimestampColumn, LastDateColumn}
	)

	return contactsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:            IDColumn,
		UserID:        UserIDColumn,
		TargetID:      TargetIDColumn,
		LastMessage:   LastMessageColumn,
		LastTimestamp: LastTimestampColumn,
		LastDate:      LastDateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
